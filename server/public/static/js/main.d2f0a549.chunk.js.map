{"version":3,"sources":["store/modules/auth/action.js","services/api.js","components/Spinner/index.js","store/modules/auth/types.js","components/Header/index.js","pages/_layouts/Default/index.js","routes/Route.js","routes/index.js","App.js","store/modules/auth/reducer.js","store/modules/rootReducer.js","store/modules/auth/sagas.js","store/modules/rootSaga.js","store/index.js","store/persistReducer.js","store/createStore.js","index.js"],"names":["loginRequest","email","password","type","actionTypes","payload","signupRequest","name","authStart","authSuccess","authFailed","error","Swal","fire","authLogout","baseURL","process","axios","create","Spinner","styles","full","position","top","bottom","width","display","alignItems","justifyContent","style","className","height","animation","variant","defaultProps","AUTH_START","AUTH_FAILED","AUTH_SUCCESS","AUTH_LOGOUT","LOGIN_REQUEST","SIGNUP_REQUEST","Header","signed","useSelector","state","auth","token","to","DefaultLayout","children","RouteWrapper","Component","component","isPrivate","rest","render","fallback","Login","React","lazy","Signup","Home","Logout","Routes","path","App","produce","draft","action","isLoading","user","id","appReducer","combineReducers","login","signup","put","call","api","post","data","errorMessage","response","message","all","takeLatest","rootReducer","reducers","sagaMiddleware","createSagaMiddleware","middlewares","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","persistReducer","key","storage","whitelist","persistStore","run","rootSaga","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d2f0a549.chunk.js","sourcesContent":["import Swal from 'sweetalert2';\nimport * as actionTypes from './types';\n\nexport function loginRequest(email, password) {\n  return {\n    type: actionTypes.LOGIN_REQUEST,\n    payload: { email, password },\n  };\n}\n\nexport function signupRequest(name, email, password) {\n  return {\n    type: actionTypes.SIGNUP_REQUEST,\n    payload: { name, email, password },\n  };\n}\n\nexport function authStart() {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n}\n\nexport function authSuccess(payload) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    payload,\n  };\n}\n\nexport function authFailed(error) {\n  Swal.fire('Error!', error, 'error');\n\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error,\n  };\n}\n\nexport function authLogout() {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n}\n","import axios from 'axios';\n\nconst baseURL =\n  process.env === 'production' ? '/api/v1' : 'http://localhost:5000/api/v1';\n\nexport default axios.create({\n  baseURL,\n});\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Spinner as BootstrapSpinner } from 'react-bootstrap';\n\nconst SIZE = 80;\n\nexport default function Spinner({ full }) {\n  const styles = {};\n\n  if (full) {\n    styles.position = 'absolute';\n    styles.top = '0';\n    styles.bottom = '0';\n    styles.width = '100%';\n    styles.display = 'flex';\n    styles.alignItems = 'center';\n    styles.justifyContent = 'center';\n  }\n\n  return (\n    <div style={styles}>\n      <BootstrapSpinner\n        className=\"m-4\"\n        style={{ width: SIZE, height: SIZE }}\n        animation=\"border\"\n        variant=\"primary\"\n      />\n    </div>\n  );\n}\n\nSpinner.propTypes = {\n  full: PropTypes.bool,\n};\n\nSpinner.defaultProps = {\n  full: false,\n};\n","export const AUTH_START = '@auth/AUTH_START';\nexport const AUTH_FAILED = '@auth/AUTH_FAILED';\nexport const AUTH_SUCCESS = '@auth/AUTH_SUCCESS';\nexport const AUTH_LOGOUT = '@auth/AUTH_LOGOUT';\nexport const LOGIN_REQUEST = '@auth/LOGIN_REQUEST';\nexport const SIGNUP_REQUEST = '@auth/SIGNUP_REQUEST';\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport default function Header() {\n  const signed = useSelector((state) => state.auth.token);\n\n  return (\n    <header className=\"bg-primary d-flex align-items-center justify-content-between py-3 px-4\">\n      <h1 className=\"h3 text-white text-center m-0 font-weight-bolder\">\n        MERN Boilerplate\n      </h1>\n      <nav>\n        <ul className=\"m-0 text-white navbar-dark list-unstyled d-flex align-self-center\">\n          {signed ? (\n            <li>\n              <Link className=\"text-white\" to=\"/logout\">\n                Logout\n              </Link>\n            </li>\n          ) : (\n            <>\n              <li>\n                <NavLink className=\"text-white mr-3\" to=\"/login\">\n                  Login\n                </NavLink>\n              </li>\n              <li>\n                <NavLink className=\"text-white\" to=\"/signup\">\n                  Signup\n                </NavLink>\n              </li>\n            </>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Header from '../../../components/Header';\n\nexport default function DefaultLayout({ children }) {\n  return (\n    <>\n      <Header />\n      {children}\n    </>\n  );\n}\nDefaultLayout.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf([PropTypes.Node]),\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React, { Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\nimport Spinner from '../components/Spinner';\nimport DefaultLayout from '../pages/_layouts/Default';\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const signed = useSelector((state) => state.auth.token);\n\n  if (!signed && isPrivate) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  if (signed && !isPrivate) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={() => (\n        <Suspense fallback={<Spinner full />}>\n          <DefaultLayout>\n            <Component />\n          </DefaultLayout>\n        </Suspense>\n      )}\n    />\n  );\n}\n\nRouteWrapper.propTypes = {\n  component: PropTypes.any.isRequired,\n  isPrivate: PropTypes.bool,\n};\n\nRouteWrapper.defaultProps = {\n  isPrivate: false,\n};\n","import React from 'react';\nimport { Switch } from 'react-router';\nimport Route from './Route';\n\nconst Login = React.lazy(() => import('../pages/Login'));\nconst Signup = React.lazy(() => import('../pages/Signup'));\nconst Home = React.lazy(() => import('../pages/Home'));\nconst Logout = React.lazy(() => import('../pages/Logout'));\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signup\" component={Signup} />\n      <Route path=\"/logout\" component={Logout} isPrivate />\n      <Route path=\"/\" component={Home} isPrivate />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport './assets/scss/theme.scss';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <main>\n      <Routes />\n    </main>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-param-reassign */\nimport produce from 'immer';\n\nimport * as actionTypes from './types';\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  token: null,\n  user: null,\n};\n\nexport default produce((draft, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      draft.isLoading = true;\n      break;\n    case actionTypes.AUTH_SUCCESS:\n      draft.isLoading = false;\n      draft.user = {\n        id: action.payload.id,\n        name: action.payload.name,\n        email: action.payload.email,\n      };\n      draft.token = action.payload.token;\n      break;\n    case actionTypes.AUTH_FAILED:\n      draft.isLoading = false;\n      draft.error = action.error;\n      break;\n    case actionTypes.AUTH_LOGOUT:\n      draft.isLoading = false;\n      draft.token = null;\n      draft.error = null;\n      break;\n    default:\n  }\n}, initialState);\n","import { combineReducers } from 'redux';\nimport auth from './auth/reducer';\n\nconst appReducer = combineReducers({\n  auth,\n});\n\nexport default appReducer;\n","import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport * as actionTypes from './types';\nimport { authFailed, authStart, authSuccess } from './action';\n\nfunction* login(action) {\n  yield put(authStart());\n  try {\n    const { data } = yield call(api.post, '/login', action.payload);\n    yield put(authSuccess(data));\n  } catch (error) {\n    const errorMessage = error.response\n      ? error.response.data.message\n      : error.message;\n    yield put(authFailed(errorMessage));\n  }\n}\n\nfunction* signup(action) {\n  yield put(authStart());\n  try {\n    const { data } = yield call(api.post, '/signup', action.payload);\n    yield put(authSuccess(data));\n  } catch (error) {\n    const errorMessage = error.response\n      ? error.response.data.message\n      : error.message;\n    yield put(authFailed(errorMessage));\n  }\n}\n\nexport default all([\n  takeLatest(actionTypes.LOGIN_REQUEST, login),\n  takeLatest(actionTypes.SIGNUP_REQUEST, signup),\n]);\n","import { all } from 'redux-saga/effects';\n// user-org\nimport auth from './auth/sagas';\n\nexport default function* rootReducer() {\n  return yield all([auth]);\n}\n","import { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\n\nimport createStore from './createStore';\nimport persistReducer from './persistReducer';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nconst store = createStore(persistReducer(rootReducer), middlewares);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport { store, persistor };\n","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nexport default (reducers) => {\n  const persistedReducer = persistReducer(\n    {\n      key: 'TODOS',\n      storage,\n      whitelist: ['auth'],\n    },\n    reducers,\n  );\n\n  return persistedReducer;\n};\n","import { createStore, compose, applyMiddleware } from 'redux';\n\nexport default (reducers, middlewares) => {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  return createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport { store } from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}